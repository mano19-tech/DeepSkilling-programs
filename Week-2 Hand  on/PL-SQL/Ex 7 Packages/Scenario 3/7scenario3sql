CREATE OR REPLACE PACKAGE AccountOperations AS
    PROCEDURE OpenAccount(p_accountID NUMBER, p_customerID NUMBER, p_balance NUMBER);
    PROCEDURE CloseAccount(p_accountID NUMBER);
    FUNCTION GetTotalBalance(p_customerID NUMBER) RETURN NUMBER;
END AccountOperations;
/

CREATE OR REPLACE PACKAGE BODY AccountOperations AS

    PROCEDURE OpenAccount(p_accountID NUMBER, p_customerID NUMBER, p_balance NUMBER) IS
    BEGIN
        INSERT INTO Accounts (AccountID, CustomerID, Balance)
        VALUES (p_accountID, p_customerID, p_balance);
    END OpenAccount;

    PROCEDURE CloseAccount(p_accountID NUMBER) IS
    BEGIN
        DELETE FROM Accounts
        WHERE AccountID = p_accountID;
    END CloseAccount;

    FUNCTION GetTotalBalance(p_customerID NUMBER) RETURN NUMBER IS
        v_total_balance NUMBER;
    BEGIN
        SELECT SUM(Balance)
        INTO v_total_balance
        FROM Accounts
        WHERE CustomerID = p_customerID;

        RETURN NVL(v_total_balance, 0);
    END GetTotalBalance;

END AccountOperations;
/


SET SERVEROUTPUT ON;


-- Open 2 accounts for the same customer
BEGIN
    AccountOperations.OpenAccount(201, 1, 5000);
    AccountOperations.OpenAccount(202, 1, 7000);
END;
/

-- Close one account
BEGIN
    AccountOperations.CloseAccount(201);
END;
/

-- Get total balance
DECLARE
    v_total NUMBER;
BEGIN
    v_total := AccountOperations.GetTotalBalance(1);
    DBMS_OUTPUT.PUT_LINE('Total Balance: ' || v_total);
END;
/
